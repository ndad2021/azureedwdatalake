{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "FRDETL"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/DestinationDataset_eit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureSynapseAnalytics1",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlDWTable",
				"schema": [
					{
						"name": "CustomerKey",
						"type": "int",
						"precision": 10
					},
					{
						"name": "CustomerId",
						"type": "varchar"
					},
					{
						"name": "Customer",
						"type": "varchar"
					},
					{
						"name": "CCity",
						"type": "varchar"
					},
					{
						"name": "CStateProvince",
						"type": "varchar"
					},
					{
						"name": "CountryRegion",
						"type": "varchar"
					},
					{
						"name": "CPostalCode",
						"type": "varchar"
					}
				],
				"typeProperties": {
					"schema": "dbo",
					"table": "CustomerData"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SourceDataset_eit')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "AzureDataLakeStoragelinkedservice",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": "CustomerData.csv",
						"fileSystem": "datasets"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "-1",
						"type": "String"
					},
					{
						"name": "[Not Applicable]1",
						"type": "String"
					},
					{
						"name": "[Not Applicable]2",
						"type": "String"
					},
					{
						"name": "[Not Applicable]3",
						"type": "String"
					},
					{
						"name": "[Not Applicable]4",
						"type": "String"
					},
					{
						"name": "[Not Applicable]5",
						"type": "String"
					},
					{
						"name": "[Not Applicable]6",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Movies_trasnformation')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "Moviesdbff",
								"type": "DatasetReference"
							},
							"name": "MoviesADLS"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "AzureSqlDatabaseDataset",
								"type": "DatasetReference"
							},
							"name": "Azuresynapsesink",
							"rejectedDataLinkedService": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							}
						},
						{
							"dataset": {
								"referenceName": "moviesrank",
								"type": "DatasetReference"
							},
							"name": "Flatfilesink",
							"rejectedDataLinkedService": {
								"referenceName": "AzureDataLakeStorage1",
								"type": "LinkedServiceReference"
							}
						}
					],
					"transformations": [
						{
							"name": "select1"
						},
						{
							"name": "filter1"
						},
						{
							"name": "DerivedPrimaryGenre"
						},
						{
							"name": "RankMoviesByRatings"
						},
						{
							"name": "AggregateRatings"
						},
						{
							"name": "alterRow1"
						}
					],
					"scriptLines": [
						"source(output(",
						"          movie as integer,",
						"          title as string,",
						"          genres as string,",
						"          year as short,",
						"          Rating as short,",
						"          {Rotton Tomato} as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     ignoreNoFilesFound: false) ~> MoviesADLS",
						"MoviesADLS select(mapColumn(",
						"          movie,",
						"          title,",
						"          genres,",
						"          year,",
						"          {Rotten Tomato} = {Rotton Tomato}",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> select1",
						"select1 filter(toInteger(year) > 1950) ~> filter1",
						"filter1 derive(PrimaryGenre = iif(locate('|',genres) > 1,left(genres,locate('|',genres)-1),genres)) ~> DerivedPrimaryGenre",
						"DerivedPrimaryGenre window(over(PrimaryGenre,",
						"          year),",
						"     desc({Rotten Tomato}, true),",
						"     Ratings = rank()) ~> RankMoviesByRatings",
						"RankMoviesByRatings aggregate(groupBy(PrimaryGenre,",
						"          year),",
						"     AverageRatings = avg(toInteger({Rotten Tomato})),",
						"          HighestRated = first(title),",
						"          LowestRated = last(title),",
						"          NumberOfMovies = count()) ~> AggregateRatings",
						"AggregateRatings alterRow(upsertIf(true())) ~> alterRow1",
						"alterRow1 sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:false,",
						"     updateable:false,",
						"     upsertable:true,",
						"     keys:['PrimaryGenre','year'],",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError',",
						"     mapColumn(",
						"          PrimaryGenre,",
						"          year,",
						"          AverageRatings,",
						"          HighestRated,",
						"          LowestRated,",
						"          NumberOfMovies",
						"     )) ~> Azuresynapsesink",
						"AggregateRatings sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     partitionFileNames:['MoviesRankTest'],",
						"     umask: 0777,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> Flatfilesink"
					]
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/powerquery1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "CustomerData",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> CustomerData",
							"dataset": {
								"referenceName": "CustomerData",
								"type": "DatasetReference"
							}
						},
						{
							"name": "ProductDatacsv",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> ProductDatacsv",
							"dataset": {
								"referenceName": "ProductDatacsv",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared CustomerData = let AdfDoc = Sql.Database(\"referecendata.database.windows.net\", \"referencedata\", [CreateNavigationProperties = false]), InputTable = AdfDoc{[Schema=\"dbo\",Item=\"CustomerData\"]}[Data] in InputTable;\r\nshared ProductDatacsv = let AdfDoc = AzureStorage.DataLakeContents(\"https://fdistoragedemo.dfs.core.windows.net/datasets/ProductData.csv\"),Csv = Csv.Document(AdfDoc, [Delimiter = \",\", Encoding = TextEncoding.Utf8, QuoteStyle = QuoteStyle.Csv]) in Csv;\r\nshared UserQuery = let Source = #\"CustomerData\",\r\n  #\"Removed top rows\" = Table.Skip(Source, 1) in #\"Removed top rows\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_eit')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_eit",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "datasets//CustomerData.csv"
							},
							{
								"name": "Destination",
								"value": "dbo.CustomerData"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": false,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 1
								}
							},
							"sink": {
								"type": "SqlDWSink",
								"allowCopyCommand": true,
								"copyCommandSettings": {}
							},
							"enableStaging": true,
							"stagingSettings": {
								"linkedServiceName": {
									"referenceName": "fdisynapse-WorkspaceDefaultStorage",
									"type": "LinkedServiceReference"
								},
								"path": "synapseblob"
							},
							"parallelCopies": 1,
							"enableSkipIncompatibleRow": false,
							"logSettings": {
								"enableCopyActivityLog": true,
								"copyActivityLogSettings": {
									"logLevel": "Warning",
									"enableReliableLogging": false
								},
								"logLocationSettings": {
									"linkedServiceName": {
										"referenceName": "AzureDataLakeStoragelinkedservice",
										"type": "LinkedServiceReference"
									}
								}
							},
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "CustomerKey",
											"type": "String"
										},
										"sink": {
											"name": "CustomerKey",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "CustomerId",
											"type": "String"
										},
										"sink": {
											"name": "CustomerId",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Customer",
											"type": "String"
										},
										"sink": {
											"name": "Customer",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CCity",
											"type": "String"
										},
										"sink": {
											"name": "CCity",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CStateProvince",
											"type": "String"
										},
										"sink": {
											"name": "CStateProvince",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CountryRegion",
											"type": "String"
										},
										"sink": {
											"name": "CountryRegion",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "CPostalCode",
											"type": "String"
										},
										"sink": {
											"name": "CPostalCode",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_eit",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_eit",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-05-28T09:30:54Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/SourceDataset_eit')]",
				"[concat(variables('factoryId'), '/datasets/DestinationDataset_eit')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_movies')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Movies Rank Data flow",
						"type": "ExecuteDataFlow",
						"state": "Inactive",
						"onInactiveMarkAs": "Succeeded",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "Movies_trasnformation",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"MoviesADLS": {},
									"Azuresynapsesink": {},
									"Flatfilesink": {}
								}
							},
							"staging": {
								"linkedService": {
									"referenceName": "AzureBlobStorage1",
									"type": "LinkedServiceReference"
								},
								"folderPath": "synapseblob"
							},
							"integrationRuntime": {
								"referenceName": "integrationRuntime2",
								"type": "IntegrationRuntimeReference"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/Movies_trasnformation')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/GetTableListAndTriggerCopyData')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "LookupTableList",
						"description": "Retrieve the table list from my database",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT TABLE_SCHEMA, TABLE_NAME FROM information_schema.TABLES WHERE  TABLE_SCHEMA = 'dbo' and TABLE_NAME not in ( 'TGT_NASDAQ_LISTED_DS')",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "AzureSqlDatabaseDataset",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "TriggerCopy",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "LookupTableList",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "IterateAndCopySQLTables",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {
								"tableList": {
									"value": "@activity('LookupTableList').output.value",
									"type": "Expression"
								}
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"annotations": [],
				"lastPublishTime": "2022-08-13T14:02:36Z"
			},
			"dependsOn": []
		}
	]
}